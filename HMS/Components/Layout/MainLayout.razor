@inherits LayoutComponentBase
@using System;
@using System.Collections.Generic;
@inject NavigationManager Navigation
@inject c_user c_user
@using BlazorBootstrap

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<body>
<div class="page">
    @*<div class="sidebar">
        <NavMenu />
    </div>*@

    <main>
        <div class="top-row px-4" style="@NavBarStyle">
            <div class="title-icon"></div>
            <div class="nav-title" style="@NavTextStyle">Euphoria Hotels</div> 
            <nav class="navbar">
                <ul class="nav-list">
                    @for(int i = 0; i < NavBarNames.Length; i++) {
                        <li><a href=@NavBarPages[i] style="@NavTextStyle">@NavBarNames[i]</a></li>
                    }
                </ul>
            </nav>
            <button class="navbar-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse" 
                aria-controls="navbarCollapse" aria-label="Toggle navigation">
            </button>
	    <div class="scrollmenu">
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <ul class="navbar-nav">
                    @for(int i = 0; i < NavBarNames.Length; i++){
                        <li class="nav-item">
                            <a class="nav-link" href=@NavBarPages[i] style="@NavTextStyle">@NavBarNames[i]</a>
                        </li>
                    }
                </ul>
            @*<a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>*@
            </div>
	    </div>
        </div>

        <article class="content">
            @Body
        </article>

        <div class="footer">
            <div class="ftr-title">
                <div class="title-box">
                    <div class="title-icon"></div>
                    <h3>Euphoria Hotels</h3>
                </div>
                <p>Your got to companion for travel</p>
            </div>
            <div class="ftr-wrapper">
                <div class="ftr-section">
                    <h3>Company</h3>
                    <a href="about">About</a> <br>
                    <a href="employeedashboard">Jobs</a>
                    <p>Newsroom</p>
                    <p>Advertising</p>
                    <a href="contact">Contact Us</a>
                </div>
                <div class="ftr-section">
                    <h3>Explore</h3>
                    <p>Australia</p>
                    <p>New Zealand</p>
                    <p>Unites States of America (USA)</p>
                    <p>Greece</p>
                    <p>Maldives</p>
                    <p>Singapore</p>
                    <p>See more</p>
                </div>
                <div class="ftr-section">
                    <h3>Terms and Policies</h3>
                    <p>Privacy Policy</p>
                    <p>Terms of Use</p>
                    <p>Acessibility</p>
                    <p>Reward System Policy</p>
                </div>
                <div class="ftr-section">
                    <h3>Help</h3>
                    <p>Support</p>
                    <p>Cancel your bookings</p>
                    <p>Use Coupon</p>
                    <p>Refund Policies</p>
                    <p>International Travel Documents</p>
                </div>
            </div>
        </div>
    </main>
</div>
</body>
@code {
    string[] NavBarNames;
    string[] NavBarPages;

    string NavBarStyle, NavTextStyle;

    protected override void OnInitialized()
    {
        UpdateNavBar();
    }

    // Use this to ensure navbar updates after page render
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(1); // Allow time for navigation to complete
            UpdateNavBar(); // Update navbar after render
            StateHasChanged(); // Force a re-render to apply updates
        }
    }

    private void UpdateNavBar()
    {
        if (c_user.b_isLoggedIn)
        {
            NavBarNames = new string[] { "Home", "Discover", "Activities", "Listing Page", "My Account", "Add A Hotel", "Checkout" };
            NavBarPages = new string[] { "#", "todoapp", "activities", "listings", "userDashBoard", "addlistings", "checkout" };
        }
        else
        {
            NavBarNames = new string[] { "Home", "Discover", "Activities", "Listing Page", "My Account", "Log In", "Sign Up", "Add A Hotel", "Checkout" };
            NavBarPages = new string[] { "#", "todoapp", "activities", "listings", "userDashBoard", "signin", "login", "addlistings", "checkout" };
        }

        var currentPage = Navigation.ToBaseRelativePath(Navigation.Uri);

        (NavBarStyle, NavTextStyle) = currentPage switch
        {
            "userDashBoard" => ("background: linear-gradient(180deg, #2969BF 0%, #144E9D 100%);", "color: #FFFFFF;"),
            "listings" => ("background: linear-gradient(180deg, #2969BF 0%, #144E9D 100%);", "color: #FFFFFF;"),
            _ => ("background-color: #f7f7f7;", "color: #333333;") // default style
        };
    }
}
