@page "/contact"
@using Google.Cloud.Firestore
@rendermode InteractiveServer

<PageTitle>Contact Us</PageTitle>
<main>
    <div class="contact-info">
        <h2>Contact Us</h2>
        <p class="text-box">
            Let us know if there is anything you would like to talk to our team about whether it's
            questions, concerns, or feeback. We're here to help so let us know it the form and we 
            will get back to your promptly! 
        </p>
        <div class="contact-img"><img src="/images/generalImages/contact_img.png"/></div> 
    </div>
    <div class="contact-info" id="form">
        <h3 class="form-hdr">Send us your questions and concerns in the form below</h3>
        <input placeholder="Name" @bind="s_contactName"/> <br/>
        <input placeholder="Email" @bind="s_contactEmail"/> <br/>
        <input placeholder="Message" @bind="s_contactMessage"/> <br/>
        <button @onclick="addContactForm">Submit</button>
    </div>
</main>

<style>
    .contact-info {
        margin-top: 10px;
        width: 50%;
        float: left;
        padding: 20px;
        display:flex;
        flex-direction: column;
        align-items: center;
        text-align: left;
        margin-bottom: 20px;
    }

    .contact-img {
        margin-top: 100px;
        border-radius: 6px;
        width: 100%;
        max-width: 500px;
        height: 300px;
        overflow: hidden;
    }

    .contact-img img {
        width: 100%;  
        height: auto;  
        object-fit: cover;  
    }

    .form-hdr {
        margin-bottom: 100px;
    }

    .text-box {
        max-width: 600px;
        margin-top: 30px;
    }
    #form {
        border-color: black;
        border-width: 1px;
        border: solid;
    }
</style>

@code {
    FirestoreDb db = FirestoreDb.Create("hotelmanagementsystem-3f342");
    public class ContactForm {
        public string s_id { get; set;}
        public string s_name { get; set;}
        public string s_email { get; set;}
        public string s_message { get; set;}
    }
    private IEnumerable<ContactForm> contactForms = Array.Empty<ContactForm>();
    private string s_contactName = "";
    private string s_contactEmail = "";
    private string s_contactMessage = "";

    private async Task refreshList(){
        CollectionReference collection = db.Collection("ContactForm");
        QuerySnapshot docs = await collection.GetSnapshotAsync();

        var lst = new List<ContactForm>();
            foreach (var doc in docs.Documents){
                lst.Add(new ContactForm {
                    s_id = doc.Id,
                    s_name = doc.GetValue<string>("name"),
                    s_email = doc.GetValue<string>("email"),
                    s_message = doc.GetValue<string>("message")
                });
            }
        contactForms = lst;
    }
    protected override async Task OnInitializedAsync() {
        await refreshList();
    }

     private async Task addContactForm() {
        CollectionReference collection = db.Collection("ContactForm");
        var newEntry = new {
            name = s_contactName,
            email = s_contactEmail,
            message = s_contactMessage
        };
        
        await collection.AddAsync(newEntry);
        await refreshList();

        s_contactName = "";
        s_contactEmail = "";
        s_contactMessage = "";
    }
}