@page "/mytrips"
@using System
@using Google.Cloud.Firestore

<PageTitle>My Trips</PageTitle>

<body>
    <h3>My Trips</h3>
    
    <div class="upcoming-trips">
        <h4>Upcoming Trips</h4>
        <ul>
          @foreach(var reservation in reservations) {  
            <li>
              <p>Hotel Name: @reservation.s_hotelName</p>
              <p>Room Type: @reservation.s_roomType</p>
              <p>Check In Date: @reservation.s_checkInDate</p>
              <p>Check Out Date:# @reservation.s_checkOutDate</p>
              <p>Guests: @reservation.s_guests</p>
              <p>Email: @reservation.s_email</p>
            </li>
          }
        </ul>
    </div>        

    <div class="previous-trips">
        <h4>Previous Trips</h4>
    </div>

    <div class="next-destination">
      <h2>Based on your history</h2>
      <div class="destination-wrapper">
        <div class="destination">
          <div class="destination-img"/>
          <h4>Florida</h4>
          <p># properties</p>
        </div>
        <div class="destination">
          <div class="destination-img"/>
          <h4>Hotel Name</h4>
          <p># properties</p>
        </div>
        <div class="destination">
          <div class="destination-img"/>
          <h4>Hotel Name</h4>
          <p># properties</p>
        </div>
        <div class="destination">
          <div class="destination-img"/>
          <h4>Hotel Name</h4>
          <p># properties</p>
        </div>
        </div>
      </div>
</body>

<style>
.flex-container {
  display: flex;
  flex-direction: column;
  /*background-color: #f1f1f1;*/
}

/* This is the container that modifies a div so that it can fit whatever information is needed. E.g: an image or a rating */
.flex-container > div {
  /*background-color: DodgerBlue;*/
  color: black;
  margin: 0.2rem;  
}

/* Container that moves a section to the left */
.left {
	width: 100%;
}

/* Container that moves a section to the right */
.right {
	width: 100%;
}

.hotel-info-border {
  width: 100%;
  height: 240px;
  top: 426px;
  left: 425px;
  gap: 0px;
  border-radius: 0.3rem 0.3rem 0.3rem 0.3rem;
  margin-left: auto;
  margin-right: auto;
  opacity: 0px;
  border: 1px solid #E0E0E0
}

.column {
  float: left;
  padding: 1%;
  height: 100%;
  width: 50%;
}


/* The border that houses the filter information */
.filter-box {
    width: 30rem;
    height: 293px;
    top: 466px;
    left: 111px;
    max-width: fit-content;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 2rem;
    gap: 0px;
    border-radius: 6px 6px 0px 0px;
    border: 0.1rem solid #E0E0E0;
    opacity: 0.1rem;
}

.filter-box-top {
  width: 30rem;
  height: 3rem;
  top: 466px;
  left: 111px;
  padding: 18px 0px 0px 0px;
  gap: 10px;
  border-radius: 6px 6px 0px 0px;
  opacity: 0px;
  background-color: #E0E0E0;
}

.filter-heading-text {
  width: 30rem;
  height: 20px;
  gap: 0px;
  opacity: 0px;
  font-family: Fraunces;
  font-size: 16px;
  font-style: italic;
  font-weight: 999;
  line-height: 19.73px;
  letter-spacing: 0.01em;
  text-align: center;
  text-underline-position: from-font;
  text-decoration-skip-ink: none;
}

/* This modifies the img tag so that it scales with the size of the screen */ 
img {
	max-width: 100%;
  max-height: 100%;
	height: auto;
	width: auto\9;
}

/* At a certain pixel width, makes the column layout into a row layout */
@@media (min-width: 950px) {
  .flex-container {
    flex-direction: row;
    width: 100%;
  }

  .flex-container > div {
	height: 10%;
  }

  .left {
	width: 35%;
	height: 80%;
  }

  .filter-box {
    width: 20.1rem;
  }

  .filter-button {
    width: 20px;
    height: 20px;
    top: 539px;
    left: 129px;
    gap: 0px;
    border-radius: 5px 0px 0px 0px;
    border: 1px 0px 0px 0px;
    opacity: 0px;

  }

  .filter-box-top {
   width: 20rem;
  }

  .filter-heading-text {
    width: 20rem;
  }

  .right {
	width: 65%;
	height: 80%;
  }

  .hotel-info-border {
    width: 90%;
    height: 240px;
    top: 426px;
    left: 425px;
    gap: 0px;
    border-radius: 0.3rem 0.3rem 0.3rem 0.3rem;
    opacity: 0px;
    border: 1px solid #E0E0E0
  }

  img {
    max-width: 100%;
    width: 100%;
  }

.history-suggestion{

}

h4 {
  font-weight: 600;
}

.destination-wrapper {
  display: flex;
  justify-content: space-around;
  width: 100%;
  flex-wrap: wrap;
}

.destination {
  align-items: center;
  flex: 1;
}

ul, li {
  text-decoration: none;
}

</style>

@code {
  FirestoreDb db = FirestoreDb.Create("hotelmanagementsystem-3f342");

  // create instance where we can pull user's reservationsCollection
  public class c_users {
    public string s_hotelName { get; set;} = string.Empty;
    public string s_roomType { get; set;} = string.Empty;
    public string s_checkInDate { get; set;} = string.Empty;
    public string s_checkOutDate { get; set;} = string.Empty;
    public string s_guests { get; set;} = string.Empty;
    public string s_email { get; set;} = string.Empty;
  }

  private List<c_users> reservations = new List<c_users>();

  protected override async Task OnInitializedAsync() {
    await PullReservationInfo();
	}

  private async Task PullReservationInfo(){
    CollectionReference usersCollection = db.Collection("UserAccount");

    // figure out to do constant user tracker later
    DocumentReference userDoc = usersCollection.Document("AEtES443hJlarMtsFI0o");
    CollectionReference cr_reservationColection = userDoc.Collection("Reservations");

    // retrieves reservation data
    QuerySnapshot reservationSnapshot = await cr_reservationColection.GetSnapshotAsync();

    reservations.Clear();
    foreach (DocumentSnapshot reservationDoc in reservationSnapshot) {
      if (reservationDoc.Exists) {
        reservations.Add(new c_users {
          s_hotelName = reservationDoc.GetValue<string>("HotelName"),
          s_roomType = reservationDoc.GetValue<string>("RoomType"),
          s_checkInDate = reservationDoc.GetValue<string>("CheckInDate"),
          s_checkOutDate = reservationDoc.GetValue<string>("CheckOutDate"),
          s_guests = reservationDoc.GetValue<string>("Guests"),
          s_email = reservationDoc.GetValue<string>("Email")
        });
      }
    }
  }
}